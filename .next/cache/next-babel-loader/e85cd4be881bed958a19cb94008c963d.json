{"ast":null,"code":"import _readOnlyError from \"@babel/runtime-corejs2/helpers/esm/readOnlyError\";\nvar _jsxFileName = \"/Users/sebastianmak/Documents/Workspace/dynamic-routing-app/pages/my-allegiant/trips.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from 'next/router';\n\nvar Trips = function Trips(_ref) {\n  var router = _ref.router;\n  var count = router.query.count;\n  var countToNum = count && count.parseInt(count, 10);\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"my trips\"), __jsx(\"button\", {\n    onClick: function onClick() {\n      router.push({\n        pathname: '/my-allegiant/trips',\n        query: {\n          count: (_readOnlyError(\"countToNum\"), countToNum++)\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"+1\"), count && __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Count = \".concat(count)));\n};\n\nexport default withRouter(Trips);","map":{"version":3,"sources":["/Users/sebastianmak/Documents/Workspace/dynamic-routing-app/pages/my-allegiant/trips.js"],"names":["withRouter","Trips","router","count","query","countToNum","parseInt","push","pathname"],"mappings":";;;;AAAA,SAASA,UAAT,QAA2B,aAA3B;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAgB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AAAA,MACpBC,KADoB,GACVD,MAAM,CAACE,KADG,CACpBD,KADoB;AAE5B,MAAME,UAAU,GAAGF,KAAK,IAAIA,KAAK,CAACG,QAAN,CAAeH,KAAf,EAAsB,EAAtB,CAA5B;AACA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AACE,IAAA,OAAO,EAAE,mBAAM;AACbD,MAAAA,MAAM,CAACK,IAAP,CAAY;AACVC,QAAAA,QAAQ,EAAE,qBADA;AAEVJ,QAAAA,KAAK,EAAE;AAAED,UAAAA,KAAK,iCAAEE,UAAU,EAAZ;AAAP;AAFG,OAAZ;AAID,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAYGF,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAeA,KAAf,EAZZ,CADF;AAgBD,CAnBD;;AAqBA,eAAeH,UAAU,CAACC,KAAD,CAAzB","sourcesContent":["import { withRouter } from 'next/router';\n\nconst Trips = ({ router }) => {\n  const { count } = router.query;\n  const countToNum = count && count.parseInt(count, 10);\n  return (\n    <>\n      <h1>my trips</h1>\n      <button\n        onClick={() => {\n          router.push({\n            pathname: '/my-allegiant/trips',\n            query: { count: countToNum++ },\n          });\n        }}\n      >\n        +1\n      </button>\n      {count && <p>{`Count = ${count}`}</p>}\n    </>\n  );\n};\n\nexport default withRouter(Trips);\n"]},"metadata":{},"sourceType":"module"}