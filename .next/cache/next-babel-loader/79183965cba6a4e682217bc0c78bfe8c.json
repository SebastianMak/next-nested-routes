{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar _jsxFileName = \"/Users/sebastianmak/Documents/Workspace/dynamic-routing-app/pages/app/projects.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from 'next/router';\n\nconst Trips = ({\n  router\n}) => {\n  const {\n    count\n  } = router.query;\n  const countToNum = count ? _parseInt(count, 10) : 0;\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Projects page\"), __jsx(\"button\", {\n    onClick: () => {\n      router.push({\n        pathname: router.route,\n        query: {\n          count: countToNum + 1\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"+1\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, `Count = ${countToNum}`));\n};\n\nexport default withRouter(Trips);","map":{"version":3,"sources":["/Users/sebastianmak/Documents/Workspace/dynamic-routing-app/pages/app/projects.js"],"names":["withRouter","Trips","router","count","query","countToNum","push","pathname","route"],"mappings":";;;;AAAA,SAASA,UAAT,QAA2B,aAA3B;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAYD,MAAM,CAACE,KAAzB;AACA,QAAMC,UAAU,GAAGF,KAAK,GAAG,UAASA,KAAT,EAAgB,EAAhB,CAAH,GAAyB,CAAjD;AACA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AACE,IAAA,OAAO,EAAE,MAAM;AACbD,MAAAA,MAAM,CAACI,IAAP,CAAY;AACVC,QAAAA,QAAQ,EAAEL,MAAM,CAACM,KADP;AAEVJ,QAAAA,KAAK,EAAE;AAAED,UAAAA,KAAK,EAAEE,UAAU,GAAG;AAAtB;AAFG,OAAZ;AAID,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,WAAUA,UAAW,EAA1B,CAZF,CADF;AAgBD,CAnBD;;AAqBA,eAAeL,UAAU,CAACC,KAAD,CAAzB","sourcesContent":["import { withRouter } from 'next/router';\n\nconst Trips = ({ router }) => {\n  const { count } = router.query;\n  const countToNum = count ? parseInt(count, 10) : 0;\n  return (\n    <>\n      <h1>Projects page</h1>\n      <button\n        onClick={() => {\n          router.push({\n            pathname: router.route,\n            query: { count: countToNum + 1 },\n          });\n        }}\n      >\n        +1\n      </button>\n      <p>{`Count = ${countToNum}`}</p>\n    </>\n  );\n};\n\nexport default withRouter(Trips);\n"]},"metadata":{},"sourceType":"module"}